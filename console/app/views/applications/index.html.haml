- content_for :full_layout, true
- content_for :dark_layout, true
- content_for :footer do
  = render :partial => 'applications/footer'

- content_for :top do
  .grid-wrapper.section-header
    %nav.span12.span-flush-right.applications
      %h1.flow
        Applications
        .flow-block.right
          %ul.inline.center
            %li
              %h6 Gears Used
              %div.data #{@capabilities.consumed_gears} of #{@capabilities.max_gears}
            %li
              %h6 Plan
              %div.data #{link_to @capabilities.plan_id, account_path}

%section#app-list.span12
  %header
    %h3.invisible Application list

  %section{style: 'margin-bottom: 20px;'}

  .row
    .span8
      .tile-dark
        - groups = @applications.group_by{ |a| a.domain_id }
        - groups.each_pair do |domain_id, apps|
          %h4.domain{:style => 'padding-bottom: 5px; margin-bottom: 8px; border-bottom: 4px solid #222;'}
            - if groups.length == 1
              Applications in domain 
            - else
              Domain
            = link_to domain_id, domain_path(domain_id)
            - if apps.first.owner?
            - elsif owner = apps.first.members.find(&:owner)
              (#{owner.name})

          - apps.each do |application|
            .tile-click.application{ :class => application.owner? ? 'application-owned' : nil }
              %h2.flow
                - if application.aliases.present?
                  = link_to application_path(application), :class => 'tile-target flow-block name' do
                    = application.name
                    = '-'
                    %span.alias= application.aliases.first.name
                - else
                  = link_to application.name, application_path(application), :class => 'tile-target'

                %span.flow-block.right
                  %span.gear{:title => application_gear_count(application)}
                    = application.gear_count
                    %span.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue014"}
                    - if (scales = application.cartridges.select(&:scales?)) and scales.present?
                      .gauge-vertical>
                        - if scales.any?(&:has_scale_range?)
                          - if scales.none?(&:can_scale_up?)
                            %span.gauge-tick.fill>  .
                            %span.gauge-tick.fill>  .
                            %span.gauge-tick.fill>  .
                          - elsif scales.none?(&:can_scale_down?)
                            %span.gauge-tick.empty> .
                            %span.gauge-tick.empty> .
                            %span.gauge-tick.fill>  .
                          - else
                            %span.gauge-tick.empty> .
                            %span.gauge-tick.fill>  .
                            %span.gauge-tick.fill>  .
                        - else
                          %span.gauge-tick.fill> .
                          %span.gauge-tick.fill> .
                          %span.gauge-tick.fill> .

                  = link_to application.web_url, :target => '_blank', :class => 'url', :title => "Go to the application's web page" do
                    %span.url-icon{'aria-hidden'=>"true", 'data-icon' => "\ue002"} 
                  %span.tile-arrow{"aria-hidden" => "true", "data-icon" => "\ue007"}

              .cartridges= application.cartridges.map(&:display_name).join(', ')

        .btn-toolbar.base
          = link_to application_types_path, :class => 'btn btn-primary btn-large' do
            Add
            %strong Application
            %i.icon-add

    .span4
      %h5 You may want to...

      %ul.unstyled.application-suggestions
        - unless @has_key
          %li
            #{link_to "Set a SSH key", new_key_path} to
            %ul
              %li
                %a{href: 'javascript:;', title: 'Set your first key', 'data-content' => "<p>OpenShift uses the Secure Shell protocol to protect direct access to your application.  In order to upload or download source code from Git or to remotely access the gears in your app, you'll need to create and upload a public SSH key.</p>"} Access source code or SSH to your gears

        - if @applications.length < 3 && @applications.none?{ |a| a.cartridges.any?(&:database?) }
          %li
            %a{href: 'javascript:;', title: 'Add a Database', 'data-content' => '<p>OpenShift supports several database types, and you can always create your own downloadable cartridge for your favorite type.</p><p>Click on your application name and then choose a database to add below the list of cartridges.</p>'} Add a database to an app

        - if empty_domains = @user_owned_domains.select{ |d| d.application_count == 0 }.presence
          %li
            Use an empty domain:
            = map_to_sentence(empty_domains) do |d|
              = link_to d.name, domain_path(d)
          %li #{link_to "See all domains", domains_path}

        - elsif @user_owned_domains.length < @capabilities.max_domains
          %li #{link_to "Create", new_domain_path} another domain
          %li #{link_to "See all domains", domains_path}

        - else
          %li #{link_to "See all domains", domains_path}

        - if @applications.map{ |a| a.members.length }.max < 2
          %li
            %a{href: 'javascript:;', title: 'Membership', 'data-content' => '<p>You can give a collaborator access to your domains and applications.  Adding someone as an editor on a domain gives them the ability to create or update your applications.</p><p>To add a collaborator, click on a domain name and then enter the login of another OpenShift member.</p>'} Add a collaborator

        - if @applications.all?{ |a| a.aliases.blank? }
          %li
            %a{href: 'javascript:;', title: 'Customize your URL', 'data-content' => "<p>OpenShift gives you a public domain for each of your applications.  If you have your own domain name, you can set it as an <strong>alias</strong> on your application.</p><p>Click on your application name and select the 'change' link next to the application URL at the top of the overview page.</p>"} Use your own domain name

        - if @applications.none?(&:scales?)
          %li
            %a{href: 'javascript:;', title: 'Scale with traffic', 'data-content' => "<p>Scalable applications can run multiple copies of your web code in parallel on different servers.  This allows you to handle more web traffic, and to react to changing levels of demand.</p><p>To create a scalable app, choose an application type to create and change the 'Scaling' option on the 'Create Application' page.</p>"} Create a scalable application

        - if @has_key
          %li
            The <code>rhc</code> command line lets you:
            %ul
              %li
                %a{href: 'javascript:;', title: 'Watching logs', 'data-content' => "<p><p>From the command line, run <code>rhc tail &lt;app_name&gt;</code> to view your logs in realtime.</p>"} Access logs
              %li
                %a{href: 'javascript:;', title: 'Backup and Restore', 'data-content' => "<p>Each application can be backed up by using the snapshot command - run <code>rhc save-snapshot &lt;app_name&gt;</code> to download a tar file containing your code, databases, and other relevant data.  Use <code>rhc restore-snapshot</code> to restore the state of an app.</p><p>Note that snapshot will stop your application as it runs.</p>"} Save and restore backups
              %li
                %a{href: 'javascript:;', title: 'Forwarding ports', 'data-content' => "<p>From the command line, run <code>rhc port-forward</code> to access databases or internal ports directly.</p>"} Connect directly to internal services



-# FIXME: Refactor me into an unobtrusive javascript function
- content_for :javascripts do
  :javascript
    jQuery('.tile-click').click(function(evt) {
      if ((t = $(evt.target)) && t.is('a')) { return }
      a = $('h2 > a', this)[0];
      window.location = a.href
    });
    var popups = '.application-suggestions [data-content]'
    $(popups).popover({placement:'left', html: true, trigger: 'manual'}).click(function(e) {
      $(popups).not(this).popover('hide');
      $(this).popover('toggle', e);
    });
