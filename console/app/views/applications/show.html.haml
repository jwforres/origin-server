- content_for :full_layout, true
- content_for :dark_layout, true

- breadcrumb_for_application @application

:css
  .gear-group .gear {
  }
  .gear-info .gear-icon {
    border-left: 1px dotted transparent;
    border-right: 1px dotted transparent;
    padding: 0 1px;
  }
  .gear-icon > .gear-icon-text {
    font-size: 10px;
    line-height: 10px;
    position: absolute;
    top: -10px;
    left: 0;
    text-transform: uppercase;
  }
  .gear > .gear-count {
    margin-left: 5px;
    position: relative;
  }
  .gear > .gear-count > .gear-count-text {
    font-size: 12px;
    line-height: 12px;
    opacity: 0.6;
    position: absolute;
    left: 0;
    right: 0;
    top: -13px;
    text-align: center;
  }
  .gear-icon.gear-max > .gear-icon-text {
    right: 0;
    left: auto;
  }
  .gear-icon.gear-max, .gear-icon.gear-min {
    position: relative
  }
  .gear-icon.gear-max:after, .gear-icon.gear-min:after {
    position: absolute;
    border: 2px solid transparent;
    top: 1px;
    width: 0;
    display: block;
    content: "";
  }
  .gear-icon.gear-max:after {
    border-color: white white transparent transparent;
    right: 0;
  }
  .gear-icon.gear-min:after {
    border-color: white transparent transparent white;
    left: 0;
  }
  .cartridge-inset h6 {
    line-height: 15px;
  }
  .cartridge-inset .data {
    font-size: 12px;
    line-height: 15px;
    text-transform: uppercase;
  }
  .cartridge-inset ul.inline > li {
    vertical-align: top;
  }


- content_for :top do
  .grid-wrapper.section-header
    %nav.span12.span-flush-right.application-info
      %ul.pull-right.unstyled-flat.bits
        %li
          %h6 Gears
          %span.data #{@application.gear_count} total

        %li#restart-container.popover-restart
          = link_to application_restart_path(@application), { :id => 'restart-link', 'data-html' => 'true', 'data-placement' => 'bottom', :class => 'block btn-console-header', :title => 'Restart Application'} do
            %span.font-icon.font-icon-size-34.font-icon-grey{:alt => 'Restart', :title =>"Restart application", "aria-hidden" => "true", "data-icon" => "\ue020"}
          #restart-popover.hide
            = render 'restarts/form'

      %h1.name
        = @application.name
        .url{style: 'opacity: 1.0; font-size: 26px; display: inline;'}
          = '/'
          - if @application.aliases.length > 1
            = link_to @application.aliases.first.name, URI::HTTP.new('http', nil, 'www.foo.com', nil, nil, nil, nil, nil, nil).to_s, style: 'color: #ccc'
            = link_to pluralize(@application.aliases.length - 1, 'alias'), application_path(@application), style: 'font-size: 15px'
          - elsif @application.aliases.present?
            = link_to @application.aliases.first.name, URI::HTTP.new('http', nil, 'www.foo.com', nil, nil, nil, nil, nil, nil).to_s, style: 'color: #ccc'
            = link_to 'change', application_path(@application), style: 'font-size: 15px'
          - else
            = link_to URI.parse(@application.web_url).hostname, @application.web_url, style: 'color: #ccc'
            = link_to "change", new_application_alias_path(@application), style: 'font-size: 15px'
      %p{style: 'margin-top: -10px; margin-bottom: 10px; opacity: 0.8;'}
        Created #{time_ago_in_words(@application.creation_time)} ago in domain
        #{link_to @application.domain_id, domain_path(@application.domain_id)}

%section#app-specifics
%section#app-cartridges.span9
  %header.clearfix.header-bar
    %h3
      Cartridges
    .header-btn
      = link_to application_cartridge_types_path(@application) do
        %span.header-btn-title add cartridge
        %span.font-icon{"aria-hidden" => "true", "data-icon" => "\uee16"}
    -#%h3.pull-left Cartridges
      .pull-right
        = link_to application_cartridge_types_path(@application), :class => 'btn-add-cart' do
          Add Cartridge
          %span.sprite

  - max_gears = @capabilities.max_gears
  - can_scale_up = @application.cartridges.any?{ |c| c.can_scale_up?(max_gears) }
  - visual_limit = 6

  - @gear_groups.each_with_index do |group,g|
    .gear-group
      - cartridge = group.cartridges.first
      .cartridge-block
        .cartridge-border
          .cartridge-inset
            %h2.flow
              %div.flow-block{:title => cartridge.name}= cartridge.display_name

              %div.flow-block.right>
                %ul.inline.left{style: 'margin-bottom: 0; display: inline-block; white-space: nowrap;'}
                  %li
                    %h6 Status
                    - states = group.states.group_by(&:to_s)
                    - if states.length == 1
                      %div.data= states.first[0]
                    - else
                      - states.each do |status, at|
                        %div.data= "#{at.length} #{status}"

                  - if cartridge.scales?
                    %li
                      %h6 Scales
                      %div.data
                        - from = cartridge.scales_from
                        - to = cartridge.effective_scales_to(max_gears)
                        = link_to application_scaling_path(@application) do
                          - if from == to
                            Set to #{from}
                          - else
                            #{cartridge.scales_from} - #{cartridge.effective_scales_to(max_gears)}

                  %li
                    %h6 Gears
                    %div.data{:title => gear_group_count_title(group.gears.length)}
                      = link_to cartridge_gear_group_count(group), application_scaling_path(@application)
                    %div.data
                      = link_to cartridge_storage(cartridge), application_storage_path(@application)


                -#%div.gear{title: gear_group_count_title(group.gears.length), style: 'position: relative; display: inline-block;'}>
                  - group.gears.each_with_index do |g, i|
                    - if cartridge.scales_from == (i+1) && cartridge.scales_to != cartridge.scales_from
                      %span.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue014", style: "opacity: 1; #{g.state != :started ? 'color: yellow' : ''}; margin-left: 3px", :title => g.state, :class => 'gear-min'}>
                        %span.gear-icon-text> min #{i+1}
                    - else
                      %span.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue014", style: "opacity: 1; #{g.state != :started ? 'color: yellow' : ''}; margin-left: 3px", :title => g.state}>

                  - if cartridge.can_scale_up?(max_gears)
                    %span.gear-gap{style: 'opacity: 0.4; margin-left: 3px; '}> ➜
                    %span.gear-icon.gear-max{'aria-hidden'=>"true", 'data-icon' => "\ue014", style: 'opacity: 0.6; margin-left: 3px'}>
                      %span.gear-icon-text>max #{cartridge.effective_scales_to(max_gears)}

                  - elsif can_scale_up
                    %span.gear-gap{style: 'visibility: hidden; margin-left: 3px; '}> ➜
                    %span.gear-icon.gear-max{'aria-hidden'=>"true", 'data-icon' => "\ue014", style: 'visibility: hidden; margin-left: 3px'}>

                -#%div.gear{style: 'position: relative; display: inline-block;'}>
                  %div{style: 'display: inline-block; text-align: center; font-size: 10px; line-height: 10.5px; text-transform: uppercase; opacity: 0.5; min-width: 35px; margin-left: 2px; margin-right: 2px;'}
                    %div= link_to cartridge_storage(cartridge), application_storage_path(@application), style: 'color: white;'
                    %div= cartridge.gear_profile

                  %div{style: 'display: none; text-align: right; font-size: 10px; line-height: 10.5px; text-transform: uppercase; opacity: 0.5; position: absolute; right: 0; bottom: -12px;'}

                  - states = group.gears.group_by(&:state)
                  - extra = states.slice!(:started, :idle, :stopped)
                  - if extra.present?
                    %span.gear-count
                      - c = extra.inject(0){ |i, (k,v)| i += v.length; i }
                      - if c > 1
                        %span.gear-count-text>
                          = c
                      %span.font-icon-block>
                        %span.font-icon.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue015", style: "opacity: 1;", :class => ''}>
                        %span.font-icon.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue016", style: "opacity: 1; color: orange;", :class => ''}>

                  - if (c = states[:idle]) && c.present?
                    %span.gear-count
                      - if (c = c.length) > 1
                        %span.gear-count-text>
                          = c
                      %span.font-icon-block>
                        %span.font-icon.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue015", style: "opacity: 1;", :class => ''}>
                        %span.font-icon.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue016", style: "opacity: 1; color: lightblue;", :class => ''}>

                  - if (c = states[:stopped]) && c.present?
                    %span.gear-count>
                      - if (c = c.length) > 1
                        %span.gear-count-text>
                          = c
                      %span.font-icon-block>
                        %span.font-icon.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue015", style: "opacity: 1;", :class => ''}>
                        %span.font-icon.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue016", style: "opacity: 1; color: red;", :class => ''}>

                  - if (c = states[:started]) && c.present?
                    %span.gear-count>
                      - if (c = c.length) > 1
                        %span.gear-count-text>
                          = c
                      %span.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue014", style: "opacity: 1;", :class => ''}>

                  - max = cartridge.effective_scales_to(max_gears)
                  - if (c = max - cartridge.current_scale) > 0
                    %span.gear-count>
                      - if c > 1
                        %span.gear-count-text>
                          = c
                      %span.gear-icon{'aria-hidden'=>"true", 'data-icon' => "\ue014", style: "opacity: 0.4;", :class => ''}>

                  - if cartridge.scales?
                    .gauge-vertical{style: 'right: -4px'}>
                      - if cartridge.has_scale_range?
                        - if cartridge.can_scale_up?
                          %span.gauge-tick.empty>  .
                          %span.gauge-tick.fill>  .
                          %span.gauge-tick.fill>  .
                        - elsif cartridge.can_scale_down?
                          %span.gauge-tick.empty> .
                          %span.gauge-tick.empty> .
                          %span.gauge-tick.fill>  .
                        - else
                          %span.gauge-tick.fill> .
                          %span.gauge-tick.fill>  .
                          %span.gauge-tick.fill>  .
                      - else
                        %span.gauge-tick.fill> .
                        %span.gauge-tick.fill> .
                        %span.gauge-tick.fill> .

            - if cartridge.custom?
              %p Created from #{link_to cartridge.url, cartridge.url}

      - if scales_with = cartridge.scales_with_type
        .cartridge.cartridge-block.cartridge-embedded
          .cartridge-border
            .cartridge-inset
              .flow
                %h4.cartridge-name{title: 'This cartridge is a plugin, and shares resources with the web framework'}
                  = scales_with.display_name
                - if scales_with.haproxy_balancer?
                  .flow-block.right
                    = link_to "See HAProxy status page", @application.scale_status_url, :title => web_cartridge_scale_title(cartridge)

              - if scales_with.custom?
                %p Created from #{link_to scales_with.url, scales_with.url}

      - if builds_with = cartridge.builds_with_type
        .cartridge.cartridge-block.cartridge-embedded
          .cartridge-border
            .cartridge-inset
              .flow
                %h4.cartridge-name{title: 'This cartridge is a plugin, and shares resources with the web framework'}
                  = builds_with.display_name
                - if builds_with.jenkins_client?
                  .flow-block.right
                    =link_to 'See Jenkins Build jobs', @application.build_job_url, :title => 'Jenkins is currently running builds for your application'
                    =link_to '(configure)', application_building_path(@application), :title => 'Remove or change your Jenkins configuration'

                - if builds_with.custom?
                  %p Created from #{link_to builds_with.url, builds_with.url}

      - group.cartridges[1..-1].each do |cartridge|
        .cartridge.cartridge-block.cartridge-embedded
          .cartridge-border
            .cartridge-inset
              .flow
                %h4.cartridge-name{title: 'This cartridge is a plugin, and shares resources with the web framework'}
                  = cartridge.display_name
              - if cartridge.custom?
                %p Created from #{link_to cartridge.url, cartridge.url}


  %section.gutter{style: 'margin-top: 30px; position: relative;'}
    - carts = CartridgeType.cached.embedded.clone.sort
    -#%h4 Add additional capabilities to this application
    %span.font-icon{"aria-hidden" => "true", "data-icon" => "\uee16", style: "font-size: 50px; position: absolute; right: 10px; top: 0; opacity: 0.3;"}
    .row-fluid
      - if @application.cartridges.none?(&:database?)
        .span5
          %h5 Databases
          %ul.unstyled
            - CartridgeType.suggest!(carts, :database?, 3).each do |c|
              %li
                %span{:'data-icon' => "\uee09"}
                = link_to "Add #{c.display_name}", application_cartridge_type_path(@application, c)
      - unless @application.builds?
        .span5
          %h5 Continuous Integration
          - jenkins, builders = CartridgeType.suggest!(carts, :builder?).partition(&:jenkins_client?)
          %ul.unstyled
            - if jenkins.present?
              %li
                %span{:'data-icon' => "\ue023"}
                = link_to "Enable Jenkins", application_building_path(@application)
            - builders.each do |c|
              %li
                %span{:'data-icon' => "\ue023"}
                = link_to "Add #{c.display_name}", application_cartridge_type_path(@application, c)

      - if (useful = CartridgeType.suggest_useful!(@application, carts)).present?
        .span4
          %h5 Tools and Support
          %ul.unstyled
            - useful.each do |c|
              %li
                %span{:'data-icon' => "\ue021"}
                = link_to "Add #{c.display_name}", application_cartridge_type_path(@application, c)

    %p.larger= link_to "Or, see the entire list of cartridges you can add", application_cartridge_types_path(@application)

%aside#app-unique-info.span3
  -#%section#aliases.sidebar
    %header.clearfix.header-bar
      %h5
        Aliases
      .header-btn
        = link_to new_application_alias_path(@application) do
          %span.header-btn-title add alias
          %span.font-icon{"aria-hidden" => "true", "data-icon" => "\uee16"}

    %ul.unstyled
      - if @application.aliases.empty?
        %li
          %span No aliases set.
          = link_to('Set one now', new_application_alias_path(@application))
      - else
        - alias_scheme = @application.web_url.split(':').first
        - @application.aliases.sort.each do |a|
          %li
            - if a.has_private_ssl_certificate?
              %span.icon-lock.font-icon-size-12.font-icon-white.pull-left{'aria-hidden' => true, :title => 'SSL certificate attached'}
            - else
              %span.icon-unlock.font-icon-size-12.font-icon-grey.pull-left{'aria-hidden' => true, :title => 'No SSL certificate'}
            = link_to a.name, edit_application_alias_path(@application, a.name)
            .pull-right.icon-pencil.font-icon-grey
              = link_to 'edit', edit_application_alias_path(@application, a.name)

    - if @application.initial_git_url.present?
      %h5 Based On
      %ul.unstyled
        %li= link_to @application.initial_git_url, @application.initial_git_url

  #source-code
  - if @has_keys
    %h5 Source Code
    %p.small
      The app code is located in Git at:
      %input#application_git_url.git-url{:readonly => 'readonly', :'data-text-copy' => true, :value => @application.git_url, :title => 'The code for your application will be available through this Git repository.', :style => 'with: 100%; width: -moz-available;'}
    %p.small
      Pass this URL to 'git clone' to copy the repository locally.

    %h5 Remote Access
    %ul.unstyled
      %li= link_to 'Want to log in to your application?', '#', :'data-unhide' => '.ssh.hidden'
      %li.ssh.hidden
        %p
          The command below will open a Secure Shell (SSH) session to your application on most operating systems.  See our #{link_to 'SSH help page', ssh_help_url} for information about connecting with Windows, Mac, and Linux computers.
        %p
          %input#application_ssh_url.git-url{:readonly => 'readonly', :'data-text-copy' => true, :value => "ssh #{@application.ssh_string}", :title => 'Cut and paste this command into a command shell to access your OpenShift application.'}

  - else
    %h5 Source Code
    %p.small
      You must #{link_to "add an SSH public key to your account", new_key_path(@application)}
      before you can upload code or remotely access your application.

    %h5 Remote Access
    %p.small
      Requires a public key.

    -#
      %h5 Need Help?
      %ul.unstyled
        %li= link_to 'OpenShift User Guide', user_guide_url
        %li= link_to 'Sync your OpenShift repo with an existing Git repo', sync_git_with_remote_repo_knowledge_base_url 

  -##assistance
    %h5 New to OpenShift?
    %ul.unstyled
      %li= link_to 'See the getting started tips for this app →', get_started_application_path(@application)

    %h5 Need Help?
    %ul.unstyled
      %li= link_to 'OpenShift User Guide', user_guide_url
      %li= link_to 'Sync your OpenShift repo with an existing Git repo', sync_git_with_remote_repo_knowledge_base_url 

  -# %h5 Need Help? #restore later
    %ul.unstyled
      %li
      - if @application_type.help_topics and not @application_type.help_topics.empty?
        %h5= @application.framework_name + ' Help'
        %ul.unstyled
        - @application_type.help_topics.each do |key, value|
          %li= link_to key, value

  .btn-toolbar
    = link_to 'Delete this application', delete_application_path(@application), :class => 'btn btn-small'

- content_for :javascripts do
  :javascript
    $('#restart-link').popover({
      content: function() { return $('#restart-popover').html(); }
    }).click(function() {
      $('#restart-link').toggleClass('highlight');
      $('#restart-container').activateForms();
      return false;
    });

    $('#restart-container').on('click', '.restart-cancel', function() {
      $('#restart-link').removeClass('highlight').popover('hide');
      return false;
    }).on('submit', 'form', function() {
      $('#restart-container .btn').hide();
    });

    $('[data-text-copy]').click(function() {
      $(this).focus().select();
      $(this).keypress(function(e){ e.preventDefault(); });
    });